{"ast":null,"code":"var _jsxFileName = \"C:\\\\BogdanC\\\\Facultate\\\\Probe\\\\Rezervari\\\\cinema-ticket-booking-system\\\\frontend\\\\src\\\\components\\\\RecommendedMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FetchMoviesByGenre from '../API/FetchMoviesByGenre';\nimport GetRecommendedMovies from '../API/GetRecommendedMovies';\nimport { isLoggedIn } from '../utils/Auth';\nimport RecommendedMovieCard from './RecommendedMovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genres = {\n  Action: 28,\n  Adventure: 12,\n  Animation: 16,\n  Comedy: 35,\n  Family: 10751,\n  Fantasy: 14,\n  Mystery: 9648,\n  ScienceFiction: 878,\n  Drama: 18,\n  Horror: 27,\n  Thriller: 53,\n  Music: 10402,\n  History: 36,\n  War: 10752,\n  Romance: 10749,\n  Crime: 80\n};\nconst RecommendedMovies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [genreIds, setGenreIds] = useState([]);\n  const userLoggedIn = isLoggedIn();\n  const ACCESS_TOKEN = process.env.REACT_APP_ACCESS_TOKEN || '';\n  useEffect(() => {\n    const fetchMoviesByGenre = async () => {\n      if (genreIds.length > 0) {\n        const response = await FetchMoviesByGenre(ACCESS_TOKEN, page, genreIds);\n        if (response) {\n          const {\n            filteredMovies,\n            totalPages\n          } = response;\n          setMovies(filteredMovies);\n          setTotalPages(totalPages);\n        }\n      }\n    };\n    fetchMoviesByGenre();\n  }, [page, genreIds, ACCESS_TOKEN]);\n  useEffect(() => {\n    const fetchRecommendedMovies = async () => {\n      if (userId) {\n        const recommendedMoviesData = await GetRecommendedMovies(userId);\n        if (recommendedMoviesData && recommendedMoviesData.movieGenres.length > 0) {\n          const recommendedGenres = Object.keys(genres).filter(genre => recommendedMoviesData.movieGenres.includes(genre));\n          const recommendedGenreIds = recommendedGenres.map(genre => genres[genre]);\n          setRecommendedMovies(recommendedMoviesData);\n          setGenreIds(recommendedGenreIds);\n        }\n      }\n    };\n    fetchRecommendedMovies();\n  }, [userId]);\n  useEffect(() => {\n    if (userLoggedIn) {\n      setUserId(userLoggedIn.userId);\n    }\n  }, [userLoggedIn]);\n  const handleNextPage = () => {\n    if (page < totalPages) {\n      setPage(page + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (page > 1) {\n      setPage(page - 1);\n    }\n  };\n  const startIndex = page - 1;\n  const displayedMovies = movies.slice(startIndex, startIndex + 6);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: recommendedMovies && recommendedMovies.movieGenres && recommendedMovies.movieGenres.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-left font-bold pb-4\",\n        children: \"Recommended Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\",\n        children: displayedMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(RecommendedMovieCard, {\n          movie: movie,\n          hallNumber: index\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevPage,\n          className: `bg-red-500 hover:bg-red-700 text-white rounded px-3 py-1 text-sm font-semibold mx-2 my-2 cursor-pointer ${page === 1 ? 'opacity-50 cursor-not-allowed' : ''}`,\n          disabled: page === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          className: `bg-red-500 hover:bg-red-700 text-white rounded px-3 py-1 text-sm font-semibold mx-2 my-2 cursor-pointer ${page === totalPages ? 'opacity-50 cursor-not-allowed' : ''}`,\n          disabled: page === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(RecommendedMovies, \"KKRs3ROrJ2kAu54uOWvm1awKtGY=\");\n_c = RecommendedMovies;\nexport default RecommendedMovies;\nvar _c;\n$RefreshReg$(_c, \"RecommendedMovies\");","map":{"version":3,"names":["React","useEffect","useState","FetchMoviesByGenre","GetRecommendedMovies","isLoggedIn","RecommendedMovieCard","jsxDEV","_jsxDEV","genres","Action","Adventure","Animation","Comedy","Family","Fantasy","Mystery","ScienceFiction","Drama","Horror","Thriller","Music","History","War","Romance","Crime","RecommendedMovies","_s","movies","setMovies","page","setPage","totalPages","setTotalPages","recommendedMovies","setRecommendedMovies","userId","setUserId","genreIds","setGenreIds","userLoggedIn","ACCESS_TOKEN","process","env","REACT_APP_ACCESS_TOKEN","fetchMoviesByGenre","length","response","filteredMovies","fetchRecommendedMovies","recommendedMoviesData","movieGenres","recommendedGenres","Object","keys","filter","genre","includes","recommendedGenreIds","map","handleNextPage","handlePrevPage","startIndex","displayedMovies","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","movie","index","hallNumber","id","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/BogdanC/Facultate/Probe/Rezervari/cinema-ticket-booking-system/frontend/src/components/RecommendedMovies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport FetchMoviesByGenre from '../API/FetchMoviesByGenre';\r\nimport GetRecommendedMovies from '../API/GetRecommendedMovies';\r\nimport { isLoggedIn } from '../utils/Auth';\r\nimport RecommendedMovieCard from './RecommendedMovieCard';\r\n\r\nconst genres = {\r\n  Action: 28,\r\n  Adventure: 12,\r\n  Animation: 16,\r\n  Comedy: 35,\r\n  Family: 10751,\r\n  Fantasy: 14,\r\n  Mystery: 9648,\r\n  ScienceFiction: 878,\r\n  Drama: 18,\r\n  Horror: 27,\r\n  Thriller: 53,\r\n  Music: 10402,\r\n  History: 36,\r\n  War: 10752,\r\n  Romance: 10749,\r\n  Crime: 80,\r\n};\r\n\r\nconst RecommendedMovies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [genreIds, setGenreIds] = useState([]);\r\n  const userLoggedIn = isLoggedIn();\r\n\r\n  const ACCESS_TOKEN = process.env.REACT_APP_ACCESS_TOKEN || '';\r\n\r\n  useEffect(() => {\r\n    const fetchMoviesByGenre = async () => {\r\n      if (genreIds.length > 0) {\r\n        const response = await FetchMoviesByGenre(ACCESS_TOKEN, page, genreIds);\r\n        if (response) {\r\n          const { filteredMovies, totalPages } = response;\r\n          setMovies(filteredMovies);\r\n          setTotalPages(totalPages);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchMoviesByGenre();\r\n  }, [page, genreIds, ACCESS_TOKEN]);\r\n\r\n  useEffect(() => {\r\n    const fetchRecommendedMovies = async () => {\r\n      if (userId) {\r\n        const recommendedMoviesData = await GetRecommendedMovies(userId);\r\n        if (\r\n          recommendedMoviesData &&\r\n          recommendedMoviesData.movieGenres.length > 0\r\n        ) {\r\n          const recommendedGenres = Object.keys(genres).filter((genre) =>\r\n            recommendedMoviesData.movieGenres.includes(genre),\r\n          );\r\n          const recommendedGenreIds = recommendedGenres.map(\r\n            (genre) => genres[genre],\r\n          );\r\n          setRecommendedMovies(recommendedMoviesData);\r\n          setGenreIds(recommendedGenreIds);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchRecommendedMovies();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (userLoggedIn) {\r\n      setUserId(userLoggedIn.userId);\r\n    }\r\n  }, [userLoggedIn]);\r\n\r\n  const handleNextPage = () => {\r\n    if (page < totalPages) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  const startIndex = page - 1;\r\n\r\n  const displayedMovies = movies.slice(startIndex, startIndex + 6);\r\n\r\n  return (\r\n    <div>\r\n      {recommendedMovies &&\r\n        recommendedMovies.movieGenres &&\r\n        recommendedMovies.movieGenres.length > 0 && (\r\n          <div className='container mx-auto pt-4'>\r\n            <h1 className='text-left font-bold pb-4'>Recommended Movies</h1>\r\n            <div className='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4'>\r\n              {displayedMovies.map((movie, index) => (\r\n                <RecommendedMovieCard\r\n                  key={movie.id}\r\n                  movie={movie}\r\n                  hallNumber={index}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className='flex justify-center mt-1'>\r\n              <button\r\n                onClick={handlePrevPage}\r\n                className={`bg-red-500 hover:bg-red-700 text-white rounded px-3 py-1 text-sm font-semibold mx-2 my-2 cursor-pointer ${\r\n                  page === 1 ? 'opacity-50 cursor-not-allowed' : ''\r\n                }`}\r\n                disabled={page === 1}\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                onClick={handleNextPage}\r\n                className={`bg-red-500 hover:bg-red-700 text-white rounded px-3 py-1 text-sm font-semibold mx-2 my-2 cursor-pointer ${\r\n                  page === totalPages ? 'opacity-50 cursor-not-allowed' : ''\r\n                }`}\r\n                disabled={page === totalPages}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecommendedMovies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}