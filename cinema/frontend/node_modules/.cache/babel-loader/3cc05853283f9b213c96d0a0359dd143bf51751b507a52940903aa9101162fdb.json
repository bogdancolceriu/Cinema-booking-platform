{"ast":null,"code":"function generateRandomOccupiedSeats(minCount, maxCount, maxSeat) {\n  const count = Math.floor(Math.random() * (maxCount - minCount + 1)) + minCount;\n  const occupiedSeats = [];\n  while (occupiedSeats.length < count) {\n    const seat = Math.floor(Math.random() * maxSeat) + 1;\n    if (!occupiedSeats.includes(seat)) {\n      occupiedSeats.push(seat);\n    }\n  }\n  return occupiedSeats;\n}\nexport default generateRandomOccupiedSeats;","map":{"version":3,"names":["generateRandomOccupiedSeats","minCount","maxCount","maxSeat","count","Math","floor","random","occupiedSeats","length","seat","includes","push"],"sources":["C:/BogdanC/Facultate/Probe/Rezervari/cinema-ticket-booking-system/frontend/src/utils/GenerateRandomOccupiedSeats.js"],"sourcesContent":["function generateRandomOccupiedSeats(minCount, maxCount, maxSeat) {\r\n  const count =\r\n    Math.floor(Math.random() * (maxCount - minCount + 1)) + minCount;\r\n  const occupiedSeats = [];\r\n  while (occupiedSeats.length < count) {\r\n    const seat = Math.floor(Math.random() * maxSeat) + 1;\r\n    if (!occupiedSeats.includes(seat)) {\r\n      occupiedSeats.push(seat);\r\n    }\r\n  }\r\n  return occupiedSeats;\r\n}\r\n\r\nexport default generateRandomOccupiedSeats;\r\n"],"mappings":"AAAA,SAASA,2BAA2BA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EAChE,MAAMC,KAAK,GACTC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,QAAQ,GAAGD,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAGA,QAAQ;EAClE,MAAMO,aAAa,GAAG,EAAE;EACxB,OAAOA,aAAa,CAACC,MAAM,GAAGL,KAAK,EAAE;IACnC,MAAMM,IAAI,GAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,OAAO,CAAC,GAAG,CAAC;IACpD,IAAI,CAACK,aAAa,CAACG,QAAQ,CAACD,IAAI,CAAC,EAAE;MACjCF,aAAa,CAACI,IAAI,CAACF,IAAI,CAAC;IAC1B;EACF;EACA,OAAOF,aAAa;AACtB;AAEA,eAAeR,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}